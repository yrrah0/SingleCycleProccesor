DEPTH = 256;  -- The size of memory (256 words)
WIDTH = 32;   -- The width of each memory word (32 bits)
ADDRESS_RADIX = HEX;  -- Address is in hexadecimal
DATA_RADIX = HEX;     -- Data is in hexadecimal

CONTENT BEGIN
    -- Use no operations (nop) for default instructions
    [00..FF]: 00000000;  -- nop (equivalent to add $0, $0, $0)

    -- Place MIPS instructions here
    00: 8C020000;  -- lw $2, 0($0)  -> Load word into $2 from memory address 0
    04: 8C030001;  -- lw $3, 1($0)  -> Load word into $3 from memory address 1
    08: 00430820;  -- add $1, $2, $3  -> Add $2 and $3 and store result in $1
    0C: AC010003;  -- sw $1, 3($0)  -> Store word from $1 to memory address 3
    10: 1022FFFF;  -- beq $1, $2, -4  -> Branch if $1 == $2 to PC - 4
    14: 1021FFFA;  -- beq $1, $1, -24  -> Branch if $1 == $1 to PC - 24

END;